{{- range $key, $val := $.Values.apps.s3.appsname }}
{{- if $.Values.apps.s3.enabled }}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ $val }}
  labels:
    app: {{ $val }}
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
{{- if $.Values.s2i.enabled }}
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - s3workloadgenerator
        from:
          kind: ImageStreamTag
          name: '{{ $.Values.s2i.isname }}:latest'
{{- end }}
  replicas: 1
  revisionHistoryLimit: 5
  test: false
  selector:
    app: {{ $val }}
    deploymentconfig: {{ $val }}
  template:
    metadata:
      labels:
        app: {{ $val }}
        deploymentconfig: {{ $val }}
    spec:
      containers:
{{- if $.Values.s2i.enabled }}
      - image: '{{ $.Values.s2i.isname }}'
{{ else }}
      - image: '{{ $.Values.s2i.image }}'
{{- end }}
        imagePullPolicy: Always
        name: s3workloadgenerator
        env:
        - name: CEPH_TEST_COMP
          value: object
        - name: CEPH_TEST_TYPE
{{- if eq $val "rgw-workload-generator-write" }}
          value: write
{{ else }}
          value: read
{{- end }}
        - name: CEPH_TEST_SLEEP
          value: '0.1'
        - name: S3_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ $val }}
              key: BUCKET_HOST
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ $val }}
              key: AWS_ACCESS_KEY_ID
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ $val }}
              key: AWS_SECRET_ACCESS_KEY
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ $val }}
              key: BUCKET_NAME
        - name: S3_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ $val }}
              key: BUCKET_PORT
        - name: S3_SECURE
          value: 'no'
        - name: S3_VERIFY_SSL
          value: 'no'
        - name: S3_AVG_ATTEMPTS
          value: '10'
{{- end }}
{{- end }}
