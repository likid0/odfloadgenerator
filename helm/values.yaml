# LoadGenerator Tool configuration Options
apps:
  ###
  # options related to RBD load generation testing
  ###
  rbd:
    #If set to true RBD testing will take place
    enabled: True
    #Size of the RBD PVs that will be created
    size: 10Gi
    #The Storage Class that will be used to provide the block RWO PVs
    sc: ocs-storagecluster-ceph-rbd
    #Mount point inside the pods
    mountpoint: /mnt/pv 
    #appsnames you can comment-out to exlude running a certain test
    appsname:
      writecache: rbd-write-workload-generator-cache
      write: rbd-write-workload-generator-no-cache
      read: rbd-read-workload-generator-no-cache
      readcache: rbd-read-workload-generator-cache
  ###
  # options related to cephfs load generation testing
  ###
  cephfs:
    enabled: False
    size: 10Gi
    sc: ocs-storagecluster-cephfs
    mountpoint: /mnt/pv
    appsname:
      writecache: cephfs-write-workload-generator-cache
      write: cephfs-write-workload-generator-no-cache
      read: cephfs-read-workload-generator-no-cache
      readcache: cephfs-read-workload-generator-cache
  ###      
  # Options related to S3 load generation testing
  ###
  s3:
    enabled: False
    sc: ocs-storagecluster-ceph-rgw
    s3secure: False
    appsname:
      write: rgw-workload-generator-write
      read: rgw-workload-generator-read

s2i:
  # If set to true a buildconfig and imagestream will be used to generate the
  # container image
  enabled: False
  git: https://github.com/likid0/odfloadgenerator
  isname: ocsloadgenerator
  # If s2i is set to False we will fetch the Container image from the following
  # container registry
  image: quay.io/ddomingu/ocsloadgenerator
